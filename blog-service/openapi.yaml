openapi: 3.0.3
info:
  title: Blog Service API
  description: Microservicio de blog con posts y categorías
  version: 1.0.0
  contact:
    name: Blog Service Team
    email: dev@blogservice.com

servers:
  - url: http://localhost:8001/api
    description: Desarrollo local

paths:
  /categories/:
    get:
      summary: Listar categorías activas
      description: Obtiene todas las categorías activas del blog
      tags:
        - Categories
      responses:
        '200':
          description: Lista de categorías
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'

  /posts/:
    get:
      summary: Listar posts publicados
      description: Obtiene posts publicados con paginación y búsqueda
      tags:
        - Posts
      parameters:
        - name: search
          in: query
          description: Buscar en título y contenido
          required: false
          schema:
            type: string
        - name: page
          in: query
          description: Número de página
          required: false
          schema:
            type: integer
            minimum: 1
        - name: ordering
          in: query
          description: Campo para ordenar (published_at, views, title)
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Lista paginada de posts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostListResponse'

  /posts/{slug}/:
    get:
      summary: Obtener detalle de post
      description: Obtiene el detalle completo de un post por su slug
      tags:
        - Posts
      parameters:
        - name: slug
          in: path
          required: true
          description: Slug único del post
          schema:
            type: string
      responses:
        '200':
          description: Detalle del post
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostDetail'
        '404':
          description: Post no encontrado

  /healthz/:
    get:
      summary: Health check
      description: Verifica el estado del servicio y sus dependencias
      tags:
        - Health
      responses:
        '200':
          description: Servicio saludable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheck'
        '503':
          description: Servicio no saludable

components:
  schemas:
    Category:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: "Tecnología"
        slug:
          type: string
          example: "tecnologia"

    Author:
      type: object
      properties:
        id:
          type: integer
          example: 1
        display_name:
          type: string
          example: "Ana García"

    PostListItem:
      type: object
      properties:
        id:
          type: integer
          example: 1
        title:
          type: string
          example: "Introducción a los Microservicios"
        slug:
          type: string
          example: "introduccion-a-los-microservicios"
        excerpt:
          type: string
          example: "Los microservicios son una arquitectura de software..."
        author:
          $ref: '#/components/schemas/Author'
        category:
          $ref: '#/components/schemas/Category'
        published_at:
          type: string
          format: date-time
          example: "2025-10-24T10:30:00Z"
        views:
          type: integer
          example: 150

    PostDetail:
      type: object
      properties:
        id:
          type: integer
          example: 1
        title:
          type: string
          example: "Introducción a los Microservicios"
        slug:
          type: string
          example: "introduccion-a-los-microservicios"
        body:
          type: string
          example: "Los microservicios son una arquitectura de software que estructura una aplicación..."
        author:
          $ref: '#/components/schemas/Author'
        category:
          $ref: '#/components/schemas/Category'
        published_at:
          type: string
          format: date-time
          example: "2025-10-24T10:30:00Z"
        views:
          type: integer
          example: 150
        created_at:
          type: string
          format: date-time
          example: "2025-10-24T10:00:00Z"
        updated_at:
          type: string
          format: date-time
          example: "2025-10-24T10:00:00Z"

    PostListResponse:
      type: object
      properties:
        count:
          type: integer
          example: 25
        next:
          type: string
          nullable: true
          example: "http://localhost:8001/api/posts/?page=3"
        previous:
          type: string
          nullable: true
          example: "http://localhost:8001/api/posts/?page=1"
        results:
          type: array
          items:
            $ref: '#/components/schemas/PostListItem'

    HealthCheck:
      type: object
      properties:
        status:
          type: string
          example: "healthy"
        service:
          type: string
          example: "blog-service"
        checks:
          type: object
          properties:
            database:
              type: string
              example: "healthy"
            redis:
              type: string
              example: "healthy"

tags:
  - name: Categories
    description: Operaciones con categorías
  - name: Posts
    description: Operaciones con posts del blog
  - name: Health
    description: Monitoreo del servicio